
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Configuración de Supabase
export const SUPABASE_CONFIG = {
  url: "https://onlpsmjdqqcqyqmhyfay.supabase.co",
  key: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9ubHBzbWpkcXFjcXlxbWh5ZmF5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE4MjYzNTYsImV4cCI6MjA1NzQwMjM1Nn0.RXY2Rt11OR9BWJw0g-O4_2GBttsota3L2XxaMHSXaX0"
};

// Variable global para el modo offline
let _offlineMode = true; // Iniciar en modo offline por defecto

// Comprobar si el navegador está online
export const isOnline = () => {
  return navigator.onLine;
};

// Verificar si estamos en modo offline
export const offlineMode = () => {
  return _offlineMode;
};

// Activar/desactivar modo offline
export const setOfflineMode = (value: boolean) => {
  if (_offlineMode !== value) {
    _offlineMode = value;
    // Disparar evento para notificar cambio
    window.dispatchEvent(new CustomEvent('offlinemodechange', { 
      detail: { offlineMode: value } 
    }));
    
    // Guardar preferencia en localStorage
    try {
      localStorage.setItem('offline_mode', value ? 'true' : 'false');
    } catch (e) {
      console.error('Error al guardar preferencia de modo offline:', e);
    }
    
    console.log(`Modo offline ${value ? 'activado' : 'desactivado'}`);
  }
};

// Función para testear la conexión a Supabase
export const testConnection = async () => {
  try {
    // Si estamos en modo offline, devolver falso directamente
    if (offlineMode()) {
      return {
        success: false,
        error: 'Modo offline activado',
        offlineMode: true
      };
    }
    
    const startTime = Date.now();
    
    // Intentar una consulta simple a la base de datos
    const { data, error } = await supabase
      .from('profiles')
      .select('id')
      .limit(1);
    
    const endTime = Date.now();
    const latency = endTime - startTime;
    
    if (error) {
      console.error('Error verificando conexión a Supabase:', error);
      return {
        success: false,
        error,
        offlineMode: false,
        latency
      };
    }
    
    return {
      success: true,
      offlineMode: false,
      latency,
      supabaseVersion: '2.x'
    };
  } catch (error) {
    console.error('Error inesperado al verificar conexión a Supabase:', error);
    return {
      success: false,
      error,
      offlineMode: false
    };
  }
};

// Inicializar desde localStorage
const initOfflineMode = () => {
  try {
    const savedMode = localStorage.getItem('offline_mode');
    if (savedMode !== null) {
      _offlineMode = savedMode === 'true';
      console.log(`Modo offline inicializado desde localStorage: ${_offlineMode}`);
    } else {
      // Si no hay valor guardado, usar por defecto true (modo offline)
      _offlineMode = true;
      localStorage.setItem('offline_mode', 'true');
    }
  } catch (e) {
    console.error('Error al leer preferencia de modo offline:', e);
  }
};

// Ejecutar inicialización cuando se carga este módulo
initOfflineMode();

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_CONFIG.url, SUPABASE_CONFIG.key);
