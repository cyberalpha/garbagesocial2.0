
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

export const SUPABASE_URL = "https://kkiymeuqlznkpiqdedgz.supabase.co";
export const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtraXltZXVxbHpua3BpcWRlZGd6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEzMjYwNjMsImV4cCI6MjA1NjkwMjA2M30.aAsK16xq_dvzYBbj8HfmGGmTX5NUu1Xipe6CwbLDAe0";

// For use in diagnostic components
export const SUPABASE_CONFIG = {
  url: SUPABASE_URL,
  key: SUPABASE_PUBLISHABLE_KEY
};

// Configuración de opciones para el cliente de Supabase
const supabaseOptions = {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true
  }
};

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, supabaseOptions);

// Test connection function for diagnostics
export const testSupabaseConnection = async () => {
  try {
    // Intentar una operación simple con un timeout más largo
    const { data, error } = await supabase.from('profiles')
      .select('count')
      .limit(1)
      .timeout(5000);
      
    if (error) {
      console.error('Error en prueba de conexión:', error);
      throw error;
    }
    
    console.log('Prueba de conexión exitosa:', data);
    return { success: true };
  } catch (error) {
    console.error('Supabase connection test failed:', error);
    return { success: false, error };
  }
};

// Agregar función para verificar si el navegador está conectado a internet
export const isOnline = () => {
  return typeof navigator !== 'undefined' && navigator.onLine;
};
