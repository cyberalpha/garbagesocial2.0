
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://kkiymeuqlznkpiqdedgz.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtraXltZXVxbHpua3BpcWRlZGd6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEzMjYwNjMsImV4cCI6MjA1NjkwMjA2M30.aAsK16xq_dvzYBbj8HfmGGmTX5NUu1Xipe6CwbLDAe0";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Mejorado con timeouts más agresivos y reintentos desactivados
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      storageKey: 'garbage-social-auth-storage',
      debug: true
    },
    global: {
      headers: {
        'x-application-name': 'garbage-social-app'
      },
      // Timeouts más cortos para detectar errores más rápido
      fetch: (url, options) => {
        const controller = new AbortController();
        const { signal } = controller;
        
        // Timeout de 8 segundos para cualquier solicitud
        const timeoutId = setTimeout(() => controller.abort(), 8000);
        
        return fetch(url, { ...options, signal })
          .then(response => {
            clearTimeout(timeoutId);
            return response;
          })
          .catch(error => {
            clearTimeout(timeoutId);
            throw error;
          });
      }
    }
  }
);

// Exportamos las constantes de configuración para que puedan ser usadas en otros componentes
export const SUPABASE_CONFIG = {
  url: SUPABASE_URL
};
