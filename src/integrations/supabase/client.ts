
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

export const SUPABASE_URL = "https://onlpsmjdqqcqyqmhyfay.supabase.co";
export const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9ubHBzbWpkcXFjcXlxbWh5ZmF5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE4MjYzNTYsImV4cCI6MjA1NzQwMjM1Nn0.RXY2Rt11OR9BWJw0g-O4_2GBttsota3L2XxaMHSXaX0";

// Información de configuración para la aplicación
export const SUPABASE_CONFIG = {
  url: SUPABASE_URL,
  key: SUPABASE_PUBLISHABLE_KEY,
  apiVersion: 'v1',
  projectId: 'onlpsmjdqqcqyqmhyfay'
};

// Estado global para el modo offline
let _offlineMode = false;

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

/**
 * Verificar si el modo offline está activado
 */
export const offlineMode = (): boolean => {
  return _offlineMode;
};

/**
 * Activar o desactivar el modo offline
 */
export const setOfflineMode = (mode: boolean): void => {
  _offlineMode = mode;
  
  // Crear y disparar evento personalizado cuando cambia el modo offline
  const event = new CustomEvent('offlinemodechange', {
    detail: { offlineMode: mode }
  });
  window.dispatchEvent(event);
  
  console.log(`Modo offline cambiado a: ${mode}`);
};

/**
 * Verificar si el navegador está online
 */
export const isOnline = (): boolean => {
  return navigator.onLine;
};

/**
 * Función auxiliar para probar la conexión a Supabase
 * Alias para checkDatabaseConnection que será implementado en utils
 */
export const testConnection = async () => {
  // Importamos dinámicamente para evitar referencias circulares
  const { checkDatabaseConnection } = await import('@/utils/supabaseConnectionUtils');
  return checkDatabaseConnection();
};
